- name: Build RHDE image
  hosts: all
  gather_facts: false
  collections:
    - infra.osbuild
  tasks:

  - name: Add source RHOCP4.16
    infra.osbuild.repository:
      repo_name: "rhocp-4.16"
      base_url: https://cdn.redhat.com/content/dist/layered/rhel9/x86_64/rhocp/4.16/os
      type: yum-baseurl
      check_ssl: true
      check_gpg: true
      rhsm: true
      state: present

  - name: Add source Fast Datapath
    infra.osbuild.repository:
      repo_name: "fast-datapath"
      base_url: https://cdn.redhat.com/content/dist/layered/rhel9/x86_64/fast-datapath/os
      type: yum-baseurl
      check_ssl: true
      check_gpg: true
      rhsm: true
      state: present

  - name: copy rhocp-4.16.toml file
    ansible.builtin.copy:
      src: files/rhde_4.16_v1_blueprint.toml
      dest: /tmp/rhocp-4.16.toml

  - name: Push a RHDE 4.16 blueprint
    infra.osbuild.push_blueprint:
      src: /tmp/rhocp-4.16.toml

  - name: Get list of blueprints
    infra.osbuild.list_blueprints:
    register: list_blueprints_out

  - debug: var=list_blueprints_out


  - name: Start ostree compose
    infra.osbuild.start_compose:
      blueprint: RHDE_4_16_v1
      compose_type: edge-container
      ostree_ref: rhel/9/x86_64/edge
      image_name: rhde
      timeout: 360
    register: edge_container_image
  
  - debug: var=edge_container_image.result.body.build_id

  - name: Wait for compose to complete
    infra.osbuild.wait_compose:
      compose_id: "{{ edge_container_image.result.body.build_id }}"
      timeout: 5000

  - name: Export edge_container_image image
    infra.osbuild.export_compose:
      compose_id: "{{ edge_container_image.result.body.build_id }}"
      dest: "/tmp/edge_container_image.tar"


  - name: Start podman container
    ansible.builtin.shell: cat < "/tmp/edge_container_image.tar" | sudo podman load | grep -o -P '(?<=sha256[@:])[a-z0-9]*'
    register: podman_image_id

  - debug: var=podman_image_id.stdout_lines

  - name: Set fact
    ansible.builtin.set_fact:
      image_id: "{{ podman_image_id.stdout_lines }}"

  - name: Start podman container
    ansible.builtin.shell: podman run -d --name=minimal-microshift-server -p 8085:8080 {{ image_id }}

  - name: copy microshift-installer.toml file
    ansible.builtin.copy:
      src: files/microshift-installer.toml
      dest: /tmp/microshift-installer.toml

  - name: Push a microshift-installer blueprint
    infra.osbuild.push_blueprint:
      src: /tmp/microshift-installer.toml

  - name: Start iso compose
    infra.osbuild.start_compose:
      blueprint: microshift-installer
      compose_type: edge-installer
      ostree_ref: rhel/9/x86_64/edge
      ostree_url: http://localhost:8085/repo/
      image_name: rhde-iso
      timeout: 360
    register: edge-iso-image

  - debug: var=edge-iso-image.result.body.build_id



  - name: Wait for compose to complete
    infra.osbuild.wait_compose:
      compose_id: "{{ edge-iso-image.result.body.build_id }}"
      timeout: 5000

  - name: Export edge_iso_image image
    infra.osbuild.export_compose:
      compose_id: "{{ edge-iso-image.result.body.build_id }}"
      dest: "/tmp/rhde_image.iso"